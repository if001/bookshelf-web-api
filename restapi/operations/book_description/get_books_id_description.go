// Code generated by go-swagger; DO NOT EDIT.

package book_description

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetBooksIDDescriptionHandlerFunc turns a function with the right signature into a get books ID description handler
type GetBooksIDDescriptionHandlerFunc func(GetBooksIDDescriptionParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBooksIDDescriptionHandlerFunc) Handle(params GetBooksIDDescriptionParams) middleware.Responder {
	return fn(params)
}

// GetBooksIDDescriptionHandler interface for that can handle valid get books ID description params
type GetBooksIDDescriptionHandler interface {
	Handle(GetBooksIDDescriptionParams) middleware.Responder
}

// NewGetBooksIDDescription creates a new http.Handler for the get books ID description operation
func NewGetBooksIDDescription(ctx *middleware.Context, handler GetBooksIDDescriptionHandler) *GetBooksIDDescription {
	return &GetBooksIDDescription{Context: ctx, Handler: handler}
}

/*GetBooksIDDescription swagger:route GET /books/{id}/description book description getBooksIdDescription

本のディスクリプション取得

*/
type GetBooksIDDescription struct {
	Context *middleware.Context
	Handler GetBooksIDDescriptionHandler
}

func (o *GetBooksIDDescription) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetBooksIDDescriptionParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
